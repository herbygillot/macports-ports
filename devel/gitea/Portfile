# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/go-gitea/gitea 1.16.1 v
go.package          code.gitea.io/gitea
revision            0

homepage            https://gitea.io

description         Git with a cup of tea, painless self-hosted git service

long_description    \
    Gitea is a community managed lightweight code hosting solution written in \
    Go. It is published under the MIT license.

categories          devel
installs_libs       no
license             MIT
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

checksums           rmd160  366a3a579db4ec6cddd77d7bfaf1d7056818740e \
                    sha256  d08fbfaa8bfaf362bcce9bb75ae07687c6aad391b15fe68499f9cc8c5fdfda7a \
                    size    11080899

patchfiles          patch-config.diff

if {"darwin" eq ${os.platform} && ${os.major} > 8} {
    set gitea_user  _${name}
} else {
    set gitea_user  ${name}
}

set gitea_conf_dir  ${prefix}/etc/${name}
set gitea_log_dir   ${prefix}/var/log/${name}
set gitea_run_dir   ${prefix}/var/run/${name}
set gitea_share_dir ${prefix}/share/${name}
set gitea_state_dir ${prefix}/var/lib/${name}
set gitea_data_dir  ${gitea_state_dir}/data

set gitea_conf_src  ${worksrcpath}/custom/conf/app.example.ini
set gitea_conf_default \
                    ${gitea_share_dir}/app.ini.default
set gitea_conf      ${gitea_conf_dir}/app.ini

add_users           ${gitea_user} \
                    group=${gitea_user} \
                    realname=Gitea \
                    home=${gitea_state_dir}

startupitem.create  yes
startupitem.executable \
                    ${prefix}/bin/${name} -c ${gitea_conf} -w ${gitea_state_dir}
startupitem.logevents \
                    yes
startupitem.user    ${gitea_user}


depends_build-append \
                    port:nodejs16 \
                    path:bin/npx:npm7

depends_run-append  path:bin/git:git

# Re-enable Go modules, allow Go to fetch dependencies at build time.
build.env-delete    GO111MODULE=off GOPROXY=off
build.env-append    PATH=$env(PATH):${gopath}/bin

build.cmd           make
build.pre_args-append \
                    GITEA_VERSION=${version} \
                    TAGS="bindata gogit sqlite sqlite_unlock_notify"
build.args          build

use_parallel_build  no

post-patch {
    reinplace -E \
        "s|@@DATA_DIR@@|${gitea_data_dir}|g" \
        ${gitea_conf_src}

    reinplace -E \
        "s|@@STATE_DIR@@|${gitea_state_dir}|g" \
        ${gitea_conf_src}

    reinplace -E \
        "s|@@LOG_DIR@@|${gitea_log_dir}|g" \
        ${gitea_conf_src}

    reinplace -E \
        "s|@@RUN_DIR@@|${gitea_run_dir}|g" \
        ${gitea_conf_src}

    reinplace -E \
        "s|@@USER@@|${gitea_user}|g" \
        ${gitea_conf_src}
}

destroot {
    xinstall -m 0755 ${worksrcpath}/${name} ${destroot}${prefix}/bin/

    xinstall -d ${destroot}${gitea_conf_dir}
    destroot.keepdirs-append ${destroot}${gitea_conf_dir}

    xinstall -d ${destroot}${gitea_share_dir}

    xinstall -d ${destroot}${gitea_run_dir}
    xinstall -d -m 0750 ${destroot}${gitea_run_dir}
    file attributes ${destroot}${gitea_run_dir} -owner ${gitea_user}
    destroot.keepdirs-append ${destroot}${gitea_run_dir}

    xinstall -d -m 0750 ${destroot}${gitea_log_dir}
    file attributes ${destroot}${gitea_log_dir} -owner ${gitea_user}
    destroot.keepdirs-append ${destroot}${gitea_log_dir}

    xinstall -d -m 0750 ${destroot}${gitea_state_dir}
    file attributes ${destroot}${gitea_state_dir} -owner ${gitea_user}
    destroot.keepdirs-append ${destroot}${gitea_state_dir}

    foreach state_subdir {custom data} {
        set _state_dir ${destroot}${gitea_state_dir}/${state_subdir}
        xinstall -d -m 0750 ${_state_dir}
        file attributes ${_state_dir} -owner ${gitea_user}
        destroot.keepdirs-append ${_state_dir}
    }

    copy ${gitea_conf_src} ${destroot}${gitea_conf_default}
}

post-activate {
    if {![file exists ${gitea_conf}]} {
        copy  ${gitea_conf_default} ${gitea_conf}
        file attributes ${gitea_conf} -owner ${gitea_user} -permissions 0640
    }
}

notes "
    You can find the configuration file for Gitea at:

    ${gitea_conf}
"
